{"ast":null,"code":"import { GoogleSpreadsheet } from 'google-spreadsheet';\nimport moment from 'moment';\nimport credentials from '../../credentials.json';\nconst doc = new GoogleSpreadsheet('1GN7Y73p6bvDEbo44JeaquRiClTTE4HwkrboAY8ImI3w');\n\nconst genCupom = () => {\n  const code = parseInt(moment().format('YYMMDDHHmmssSSS')).toString(16).toUpperCase();\n  return code.substr(0, 4) + '-' + code.substr(4, 4) + '-' + code.substr(8, 4);\n};\n\nexport default (async (req, res) => {\n  try {\n    await doc.useServiceAccountAuth(credentials);\n    await doc.loadInfo();\n    console.log(doc.title);\n    const sheet = doc.sheetsByIndex[1];\n    const data = JSON.parse(req.body);\n    const sheetConfig = doc.sheetsByIndex[2];\n    await sheetConfig.loadCells('A2:B2');\n    const mostrarPromocaoCell = sheetConfig.getCell(1, 0);\n    const textoCell = sheetConfig.getCell(1, 1);\n    let Cupom = '';\n    let Promo = '';\n\n    if (mostrarPromocaoCell.value === 'VERDADEIRO') {\n      // GERANDO CODIGO DE CUPOM\n      Cupom = genCupom();\n      Promo = textoCell.value;\n    } //Nome Email Whatsapp Cupom Promo\n\n\n    await sheet.addRow({\n      Nome: data.Nome,\n      Email: data.Email,\n      Whatsapp: data.Whatsapp,\n      Nota: parseInt(data.Nota),\n      'Data Preenchimento': moment().format('DD/MM/YYYY, HH:mm:ss'),\n      Cupom,\n      Promo\n    });\n    res.end(JSON.stringify({\n      showCoupon: Cupom !== '',\n      Cupom,\n      Promo\n    }));\n  } catch (err) {\n    console.log(err);\n    res.end('error');\n  }\n});","map":{"version":3,"sources":["C:/Users/dikvi/Desktop/meconta/pages/api/save.js"],"names":["GoogleSpreadsheet","moment","credentials","doc","genCupom","code","parseInt","format","toString","toUpperCase","substr","req","res","useServiceAccountAuth","loadInfo","console","log","title","sheet","sheetsByIndex","data","JSON","parse","body","sheetConfig","loadCells","mostrarPromocaoCell","getCell","textoCell","Cupom","Promo","value","addRow","Nome","Email","Whatsapp","Nota","end","stringify","showCoupon","err"],"mappings":"AAAA,SAASA,iBAAT,QAAiC,oBAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,GAAG,GAAG,IAAIH,iBAAJ,CAAsB,8CAAtB,CAAZ;;AAEA,MAAMI,QAAQ,GAAG,MAAM;AACpB,QAAMC,IAAI,GAAGC,QAAQ,CAACL,MAAM,GAAGM,MAAT,CAAgB,iBAAhB,CAAD,CAAR,CAA6CC,QAA7C,CAAsD,EAAtD,EAA0DC,WAA1D,EAAb;AACA,SAAOJ,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAc,CAAd,IAAmB,GAAnB,GAAyBL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAzB,GAA4C,GAA5C,GAAkDL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAc,CAAd,CAAzD;AACF,CAHD;;AAKA,gBAAe,OAAMC,GAAN,EAAWC,GAAX,KAAkB;AAC7B,MAAG;AACC,UAAMT,GAAG,CAACU,qBAAJ,CAA0BX,WAA1B,CAAN;AACA,UAAMC,GAAG,CAACW,QAAJ,EAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,GAAG,CAACc,KAAhB;AACA,UAAMC,KAAK,GAAGf,GAAG,CAACgB,aAAJ,CAAkB,CAAlB,CAAd;AACA,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWX,GAAG,CAACY,IAAf,CAAb;AAEA,UAAMC,WAAW,GAAGrB,GAAG,CAACgB,aAAJ,CAAkB,CAAlB,CAApB;AACA,UAAMK,WAAW,CAACC,SAAZ,CAAsB,OAAtB,CAAN;AAEA,UAAMC,mBAAmB,GAAGF,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,CAA5B;AACA,UAAMC,SAAS,GAAGJ,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,CAAlB;AAEA,QAAIE,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAGJ,mBAAmB,CAACK,KAApB,KAA8B,YAAjC,EAA8C;AAC3C;AACAF,MAAAA,KAAK,GAAGzB,QAAQ,EAAhB;AACA0B,MAAAA,KAAK,GAAGF,SAAS,CAACG,KAAlB;AACF,KAnBF,CAqBC;;;AACA,UAAMb,KAAK,CAACc,MAAN,CAAa;AACfC,MAAAA,IAAI,EAAEb,IAAI,CAACa,IADI;AAEfC,MAAAA,KAAK,EAAEd,IAAI,CAACc,KAFG;AAGfC,MAAAA,QAAQ,EAAEf,IAAI,CAACe,QAHA;AAIfC,MAAAA,IAAI,EAAE9B,QAAQ,CAACc,IAAI,CAACgB,IAAN,CAJC;AAKf,4BAAsBnC,MAAM,GAAGM,MAAT,CAAgB,sBAAhB,CALP;AAMfsB,MAAAA,KANe;AAOfC,MAAAA;AAPe,KAAb,CAAN;AASElB,IAAAA,GAAG,CAACyB,GAAJ,CAAQhB,IAAI,CAACiB,SAAL,CAAe;AACnBC,MAAAA,UAAU,EAAEV,KAAK,KAAK,EADH;AAEnBA,MAAAA,KAFmB;AAGnBC,MAAAA;AAHmB,KAAf,CAAR;AAKD,GApCL,CAoCK,OAAOU,GAAP,EAAY;AACTzB,IAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;AACA5B,IAAAA,GAAG,CAACyB,GAAJ,CAAQ,OAAR;AACH;AACR,CAzCD","sourcesContent":["import { GoogleSpreadsheet } from'google-spreadsheet'\r\nimport moment from 'moment'\r\n\r\nimport credentials from '../../credentials.json'\r\n\r\nconst doc = new GoogleSpreadsheet('1GN7Y73p6bvDEbo44JeaquRiClTTE4HwkrboAY8ImI3w')\r\n\r\nconst genCupom = () => {\r\n   const code = parseInt(moment().format('YYMMDDHHmmssSSS')).toString(16).toUpperCase()\r\n   return code.substr(0,4) + '-' + code.substr(4,4) + '-' + code.substr(8,4)\r\n}\r\n\r\nexport default async(req, res) =>{\r\n    try{\r\n        await doc.useServiceAccountAuth(credentials)\r\n        await doc.loadInfo()\r\n        console.log(doc.title)\r\n        const sheet = doc.sheetsByIndex[1]\r\n        const data = JSON.parse(req.body)\r\n\r\n        const sheetConfig = doc.sheetsByIndex[2]\r\n        await sheetConfig.loadCells('A2:B2')\r\n\r\n        const mostrarPromocaoCell = sheetConfig.getCell(1, 0)\r\n        const textoCell = sheetConfig.getCell(1, 1)\r\n\r\n        let Cupom = ''\r\n        let Promo = ''\r\n        if(mostrarPromocaoCell.value === 'VERDADEIRO'){\r\n           // GERANDO CODIGO DE CUPOM\r\n           Cupom = genCupom()\r\n           Promo = textoCell.value \r\n        }\r\n\r\n        //Nome Email Whatsapp Cupom Promo\r\n        await sheet.addRow({\r\n            Nome: data.Nome,\r\n            Email: data.Email,\r\n            Whatsapp: data.Whatsapp,\r\n            Nota: parseInt(data.Nota),\r\n            'Data Preenchimento': moment().format('DD/MM/YYYY, HH:mm:ss'),\r\n            Cupom,\r\n            Promo\r\n        })\r\n          res.end(JSON.stringify({\r\n              showCoupon: Cupom !== '',\r\n              Cupom,\r\n              Promo\r\n          }))\r\n        }catch (err) {\r\n            console.log(err)\r\n            res.end('error')\r\n        }\r\n}"]},"metadata":{},"sourceType":"module"}